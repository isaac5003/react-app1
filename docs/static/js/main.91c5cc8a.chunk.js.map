{"version":3,"sources":["components/AddCategory.js","helpers/getGift.js","components/GiftGridItem.js","components/GifGrid.js","hooks/useFetchGift.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifts","map","img","id","title","images","downsized_medium","GiftGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGift","GiftExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAiCeA,EA9BK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACHC,mBAAS,IADN,mBAChCC,EADgC,KACpBC,EADoB,KAcvC,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAG,OAAKP,GAAL,mBAAoBO,OACrCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAjBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCNlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,0FAC4EC,UAAUH,GADtF,qBAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KACFC,EAAQD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QARvB,kBAWZM,GAXY,4CAAH,sDCEPO,EAAe,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAClC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCAHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECHb,SAACA,GAAc,IAAD,EACZd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAgBtC,OAVAC,qBAAU,WACNxB,EAAQC,GACHwB,MAAK,SAAAd,GACFY,EAAS,CACLf,KAAMG,EACNU,SAAS,SAGtB,CAACpB,IAEGqB,EDR2BI,CAAazB,GAAjCa,EALuB,EAK7BN,KAAca,EALe,EAKfA,QAUtB,OACI,sBAAKJ,UAAU,YAAf,UACI,oBAAIA,UAAU,wBAAd,SAAuChB,IACtCoB,GAAW,mBAAGJ,UAAU,oCAAb,yBASRH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAA+BA,GAAZA,EAAIC,WEN5Be,EAxBO,WAAM,MAEYxC,mBAAS,CAAC,WAFtB,mBAEjByC,EAFiB,KAEL1C,EAFK,KAMxB,OACI,qCACI,+CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAGA,6BAEQ0C,EAAWlB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,YCdtC4B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.91c5cc8a.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories(cat => [inputValue, ...cat,]);\r\n            setInputValue('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\n\r\nexport default AddCategory\r\n\r\n","export const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=dYWlKy6gYdZIcEad73KDUC6wGEj2ATrc&q=${encodeURI(category)}&limit=5`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n    const gifts = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n    return gifts;\r\n};","import React from 'react'\r\n\r\nexport const GiftGridItem = ({ title, url }) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\n//import React, { useEffect, useState } from 'react'\r\n//import { getGifs } from '../helpers/getGift';\r\nimport { useFetchGift } from '../hooks/useFetchGift';\r\nimport { GiftGridItem } from './GiftGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    //const [count, setCount] = useState(0)\r\n    //const [Images, setImages] = useState([]);\r\n\r\n    const { data: images, loading } = useFetchGift(category);\r\n\r\n    //Se ejecuta una vez cuando el componente se renderiza\r\n    /*  useEffect(() => {\r\n         getGifs(category)\r\n             .then(setImages);\r\n     }, [category]); */\r\n\r\n\r\n    //getGifs();\r\n    return (\r\n        <div className=\"card-grid\">\r\n            <h3 className=\"animate__jackInTheBox\">{category}</h3>\r\n            {loading && <p className=\"animate__animated animate__fadeIn\">Loading....</p>}\r\n\r\n            {/* {\r\n                Images.map(img => (\r\n                    <GiftGridItem key={img.id} {...img} />\r\n                ))\r\n            } */}\r\n\r\n            {\r\n                images.map(img => (\r\n                    <GiftGridItem key={img.id} {...img} />\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from '../helpers/getGift'\r\n\r\nexport const useFetchGift = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then(img => {\r\n                setState({\r\n                    data: img,\r\n                    loading: false\r\n                });\r\n            });\r\n    }, [category]);\r\n\r\n    return state;\r\n}","import React, { useState } from 'react'\r\nimport AddCategory from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GiftExpertApp = () => {\r\n    //const categories = ['Scott', 'Luny', 'Champi', 'Killer'];\r\n    const [categories, setCategories] = useState(['batman']);\r\n    /* const handleAdd = () => {\r\n        setCategories(['Hola', ...categories]);\r\n    }; */\r\n    return (\r\n        <>\r\n            <h2>GiftExpertApp</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr />\r\n\r\n\r\n            <ol>\r\n                {\r\n                    categories.map(category => (\r\n                        <GifGrid key={category} category={category} />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GiftExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GiftExpertApp from './GiftExpertApp';\nimport './index.css';\nimport 'animate.css';\n\nReactDOM.render(\n  <GiftExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}